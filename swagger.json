{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "NOTIFICATION SERVICE",
        "description": "Send Notifications Service",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:4000",
    "basePath": "/",
    "tags": [
        {
            "name": "Users",
            "description": "API for users in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User object that needs to be added to the db",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/api/user/{_id}": {
            "put": {
                "summary": "Update user with give ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of user that we want to find",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User object that needs to be added to the db",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user with given ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "required": true,
                        "description": "ID of user that we want to find",
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User object that needs to be added to the db",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/api/robots": {
            "get": {
                "summary": "Get all subcribed robots",
                "tags": [
                    "Robots"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Robots"
                        }
                    }
                }
            }
        },
        "/api/tokens/{_robotId}": {
            "get": {
                "summary": "Get all tokens for given robot",
                "tags": [
                    "Tokens"
                ],
                "parameters": [
                    {
                        "name": "_robotId",
                        "in": "path",
                        "required": true,
                        "description": "ID of robot that we want to find",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Tokens"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "properties": {
                "_id": {
                    "type": "string",
                    "uniqueItems": true,
                    "readOnly": true
                },
                "userId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "deviceToken": {
                    "type": "string"
                },
                "isPremiumUser": {
                    "type": "boolean"
                },
                "robotIdList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Tokens": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "Robots": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "Users": {
            "type": "array",
            "$ref": "#/definitions/User"
        }
    }
}